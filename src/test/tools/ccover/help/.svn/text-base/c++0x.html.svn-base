<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
	"http://www.w3.org/TR/html4/strict.dtd">
<html lang=en><head><title>
BullseyeCoverage Help
</title>
<meta http-equiv=Content-Type content="text/html;charset=utf-8">
<link href=style.css rel=stylesheet type="text/css">
</head><body>
<div style="
	background-image: url(banner.jpg);
	background-repeat: repeat-x;
	">
	<img alt=BullseyeCoverage src="banner-title.jpg">
	<span class=reverse style="
		vertical-align: 30%;
		">
		<a style="padding-left:20pt" href=index_introduction.html><img alt="" src=up.png>Up</a>
		<a style="padding-left:20pt" href=index.html><img alt="" src=book0.png>Contents</a>
		<a style="padding-left:20pt" href=index_index.html><img alt="" src=index.png>Index</a>
		<a style="padding-left:20pt" href="http://www.bullseye.com/cgi-bin/searchHelp"><img alt="" src=search.png>Search</a>
	</span>
</div>

<h1>C++0x Support in BullseyeCoverage</h1>
<p>
See also <a href="http://gcc.gnu.org/projects/cxx0x.html">C++0x Support in GCC</a>.
<table border=1 cellspacing=10>
<tr><th>Feature
<th>Status

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2118.html">Rvalue references</a>
<td>7.11.13

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2439.htm">Rvalue references for *this</a>
<td>7.13.34

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1610.html">Initialization of class objects by rvalues</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2008/n2756.htm">Non-static data member initializers</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2242.pdf">Variadic templates</a>
<td>7.13.34

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2555.pdf">Extending variadic template template parameters</a>
<td>7.13.34

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2672.htm">Initializer lists</a>
<td>7.13.34

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1720.html">Static assertions</a>
<td>7.11.13

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1984.pdf">auto-typed variables</a>
<td>7.13.5

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1737.pdf">Multi-declarator auto</a>
<td>7.13.5

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2546.htm">Removal of auto as a storage-class specifier</a>
<td>7.13.5

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2541.htm">New function declarator syntax</a>
<td>7.13.6

<tr><td><a href="http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2927.pdf">New wording for C++0x lambdas</a>
<td>7.13.6

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2343.pdf">Declared type of an expression</a>
<td>7.13.5

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1757.html">Right angle brackets</a>
<td>7.5.37

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#226">Default template arguments for function templates</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2634.html">Solving the SFINAE problem for expressions</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2258.pdf">Template aliases</a>
<td>No

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1987.htm">Extern templates</a>
<td>7.13.10

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf">Null pointer constant</a>
<td>7.13.34

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2347.pdf">Strongly-typed enums</a>
<td>7.13.33

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2764.pdf">Forward declarations for enums</a>
<td>7.13.33

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2761.pdf">Generalized attributes</a>
<td>No

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2235.pdf">Generalized constant expressions</a>
<td>No

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2341.pdf">Alignment support</a>
<td>7.11.13

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1986.pdf">Delegating constructors</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2540.htm">Inheriting constructors</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2437.pdf">Explicit conversion operators</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2249.html">New character types</a>
<td>7.13.34

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2442.htm">Unicode string literals</a>
<td>7.13.34

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2442.htm">Raw string literals</a>
<td>7.13.34

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2170.html">Universal character name literals</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2765.pdf">Extensible literals</a>
<td>No

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2342.htm">Standard Layout Types</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2346.htm">Defaulted and deleted functions</a>
<td>7.13.31

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1791.pdf">Extended friend declarations</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2253.html">Extending sizeof</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2535.htm">Inline namespaces</a>
<td>7.13.34

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2544.pdf">Unrestricted unions</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2657.htm">Local and unnamed types as template arguments</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2930.html">Range-based for</a>
<td>No

<tr><td><a href="http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm">Explicit virtual overrides</a>
<td>No

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2670.htm">Minimal support for garbage collection and reachability-based leak detection</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3050.html">Allowing move constructors to throw [noexcept]</a>
<td>No

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3053.html">Defining Move Special Member Functions</a>
<td>7.13.31

<tr><td colspan=2>Concurrency

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2659.htm">Thread-local storage
<td>7.13.34

<tr><td>All other concurrency features
<td>Yes

<tr><td colspan=2>C99 Features in C++0x

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2340.htm">__func__ predefined identifier</a>
<td>7.13.5

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1653.htm">C99 preprocessor</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1811.pdf">long long</a>
<td>Yes

<tr><td><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1988.pdf">Extended integral types</a>
<td>Yes
</table>

<p style="font-size:xx-small">
Last reviewed: 16 Jun 2010

<!-- Footer -->
<p style="
	float: right;
	font-size: xx-small;
	">
Copyright &copy; Bullseye Testing Technology. All Rights Reserved.
<p style="
	border-top: 1px solid silver;
	padding-top: 2pt;
	">
<a href="http://www.bullseye.com"><img alt=www.bullseye.com src=earth.png>www.bullseye.com</a>
</body></html>
