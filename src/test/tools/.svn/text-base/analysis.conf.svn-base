####################
##全局参数
####################

#项目路径
PROJECT_PATH=.

#覆盖率统计文件test.cov路径
COV_PATH=.
COV_FILE="test.cov"
#被测代码路径
SOURCE_PATH="./src/cc/processelement ./src/cc/processnode ./src/cc/processmaster ./src/cc/client ./src/cc/common ./src/cc/metamanager ./src/cc/scheduler"
#支持多路径设置，e.g.SOURCE_PATH="../module1/src ../module2/inc"

#被排除的被测代码路径
SOURCE_EXCLUDE_PATH="./src/cc/processelement/test ./src/cc/processnode/test ./src/cc/processmaster/test ./src/cc/client/test ./src/cc/common/test ./src/cc/common/proto ./src/cc/metamanager/test ./src/cc/scheduler/test"
#支持多路径设置，e.g.SOURCE_EXCLUDE_PATH="../module1/src ../mo"
###################################################################################################
# NOTE:                                                                                           #
#   COV_PATH相当于autorun.sh -C1 后的路径                                                         #
#   PROJECT_PATH相当于autorun.sh --project_path 参数后设置的路径                                  #
#    这两个路径用于增量统计时，被测代码的test.cov(Makefile)不在被测项目根路径下时，进行区别       #
#    当两个路径相同时，可任意设置其中一个                                                         #
#   SOURCE_PATH相当于gentestcode.sh 后的path，即被测代码的头文件所在路径，在分析函数用例比时使用  #
###################################################################################################

#测试代码路径,默认为当前路径
TEST_DIR="./src/cc/processelement/test ./src/cc/processnode/test ./src/cc/processmaster/test ./src/cc/client/test ./src/cc/common/test ./src/cc/metamanager/test"
#支持多测试路径设置: e.g. TEST_DIR="module1/test module2/test"

#被排除的测试代码路径
TEST_EXCLUDE_DIR=""
#支持多从路径设置: e.g. TEST_EXCLUDE_DIR="module1/test module2"

#测试可执行文件位置
TEST_BIN_DIR="./src/cc/processelement/test ./src/cc/processnode/test ./src/cc/processmaster/test ./src/cc/client/test ./src/cc/common/test ./src/cc/metamanager/test"
#e.g. 编译后生成的可执行文件在测试代码文件下的output目录: TEST_BIN="moudle1/test/output moudle2/test/output"

############################################################
#编译指令：                                                #
#   空: 默认为make clean; make;                            #
#   none: 为不编译                                         #
############################################################
#Project编译指令
PROJECT_MAKE="none"

#test编译指令,默认为autorun -c;none为不编译
TEST_MAKE="none"

#执行用例的命令，默认为autorun.sh -r
TEST_RUN="sh run_ut.sh hudson.conf"
#e.g. TEST_RUN="autorun.sh -r -p 'case/*/*'"

#增量统计源与目标SVN的tag地址, 为空时进行全量统计
#SOURCE_SVN为较新版本，且应与本地代码一致; TARGET_SVN为对比的svn版本 
SOURCE_SVN="inf/computing/trunk/dstream"
TARGET_SVN=

#######################
## Dashboard config
#######################
MODULE_NAME="dstream"
SVN_PATH="inf/computing/trunk/dstream"
LANGUAGE="C/C++"

####################
## 准入/打分项配置
####################

##单个用例执行时间(ms)
#是否分析该项? [enable|disable]
CASE_TIME=disable
#准入指标(ms) (如有case的执行时间高于该值，则准入失败)
CASE_TIME_THRESHOLD=200
#该项分数所占权重
CASE_TIME_SCORE_WEIGHT=1    

##用例间独立性 [enable|disable]
# !!!NOT SUPPORT YET!!!
#CASE_INDEPENDENCY=enable

##函数覆盖率(%)
FUNCTION_COVERAGE=disable
FUNCTION_COVERAGE_THRESHOLD=80
FUNCTION_COVERAGE_SCORE_WEIGHT=1

##C/D覆盖率(%)
CD_COVERAGE=disable
CD_COVERAGE_THRESHOLD=40
CD_COVERAGE_SCORE_WEIGHT=1

##单测点覆盖率(all) 
#准入标准：文件中所列出的函数必须全部覆盖
LIST_COVERAGE=disable
#函数列表文件路径(相对测试代码路径)
#格式：[namespace::][class::]method[参数列表] filename
LIST_PATH=./func.list
LIST_COVERAGE_SCORE_WEIGHT=1
##################################################################################
# NOTE: 函数列表文件中的函数参数列表可选填，用于当有函数重载情况时，区分不同函数
# 参数类表不需要加形参名，且注意不能有空格 
# e.g. Counter::max(int,int) ../sample4.cpp
##################################################################################

##用例函数比(总用例/总函数)
CASE_FUNC_RATIO=disable
CASE_FUNC_RATIO_THRESHOLD=0.6
#打分段配置：[用例函数比:分数 用例函数比:分数 ...]，即高于（等于）该函数用例比的测试的所得分数
CASE_FUNC_RATIO_SCORE_RANGE="1:100 0.9:90 0.8:80 0.7:70 0.6:60 0.5:50 0.4:40"
CASE_FUNC_RATIO_SCORE_WEIGHT=1

##无效用例(空用例)
#准入标准：无空用例
INVALID_CASES=disable
INVALID_CASES_SCORE_WEIGHT=1

##用例使用断言
#准入标准：所有用例都使用EXPECT或者ASSERT断言
USE_ASSERTIONS=disable
USE_ASSERTIONS_SCORE_WEIGHT=1

##Test Suite注释信息(brief字段填充)
#准入标准：所有测试套件必须填充brief注释字段
BRIEF_ON_SUITE=disable
BRIEF_ON_SUITE_SCORE_WEIGHT=1

##Test Case注释信息(brief字段填充)
#准入标准：所有测试用例必须填充brief注释字段
BRIEF_ON_CASE=disable
BRIEF_ON_CASE_SCORE_WEIGHT=1

##Test Case用例版本号信息(begin_version字段填充)
#准入标准：所有测试用例必须填充begin_version注释字段
BEGIN_VERSION=disable
BEGIN_VERSION_SCORE_WEIGHT=1

##注释代码比(%)
COMMENTS_CODE_RATIO=disable
COMMENTS_CODE_RATIO_THRESHOLD=10
#打分段配置：[注释代码比:分数 注释代码比:分数 ...]，即高于（等于）该注释代码比的测试的所得分数
COMMENTS_CODE_RATIO_SCORE_RANGE="30:100 25:90 20:80 15:70 12:60 10:50 8:40"
COMMENTS_CODE_RATIO_SCORE_WEIGHT=1

##最新更新文件覆盖
MOST_CHANGE_COVERAGE_PERCENT_THRESHOLD=30
MOST_CHANGE_COVERAGE_SCORE_WEIGHT=1
#统计更新文件的数目
NTOPS=10

